---
- name: Run YSCB init
  hosts:
    - crdb_client[0]
  gather_facts: yes
  any_errors_fatal: true  

  vars:
    workload: ycsb
    init_options: --families=true --request-distribution=uniform --scan-length-distribution=uniform
    bench_init_file: ycsb-init
    bench_init_template: ycsb-init.sh.j2
    crdb_servers: "{{ hostvars['localhost']['groups']['crdb'] }}"
    crdb_db_port: 26257
    #db_settings:
    #  - "SET CLUSTER SETTING rocksdb.ingest_backpressure.l0_file_count_threshold = 20"            # Def. 20
    #  - "SET CLUSTER SETTING rocksdb.ingest_backpressure.pending_compaction_threshold = '2 GiB'"  # Def. 2.0 GiB
    #  - "SET CLUSTER SETTING schemachanger.backfiller.max_buffer_size = '512 MiB'"                # Def. 512 MiB
    #  - "SET CLUSTER SETTING kv.snapshot_rebalance.max_rate = '8 MiB'"                            # Def. 8.0 MiB
    #  - "SET CLUSTER SETTING rocksdb.min_wal_sync_interval = '0us'"                               # Def. 00:00:00

  vars_prompt:
    - name: init_inserts
      private: no
      prompt: "Number of initialization inserts"

  tasks:
    - name: Get current timestamp
      set_fact:
        test_datetime: "{{ ansible_date_time.epoch }}"

    - name: Create output files
      set_fact:
        test_folder: "{{ test_datetime }}"
        test_init_file: "{{ bench_init_file }}-{{ init_inserts }}.sh"
        test_log_init: "{{ bench_init_file }}-{{ init_inserts }}-{{ inventory_hostname }}.log"

    - name: Ensures dir exists
      file: 
        path: "{{ test_datetime }}" 
        state: directory
        mode: 0775
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: create init script
      template:
        src: "{{ bench_init_template }}"
        dest: "{{ test_datetime }}/{{ test_init_file }}"
        mode: 0775
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Workload init
      shell: "cd {{ test_datetime }}; ./{{ test_init_file }}"
      when: inventory_hostname == play_hosts[0]

    - name: Retrieve init file
      fetch:
        src: "{{ test_datetime }}/{{ test_init_file }}"
        dest: "{{ result_folder }}/{{ test_folder }}/scripts/{{ inventory_hostname }}-{{ test_init_file }}"
        flat: yes

    - name: Retrieve init log
      fetch:
        src: "{{ test_datetime }}/{{ test_log_init }}"
        dest: "{{ result_folder }}/{{ test_folder }}/"
        flat: yes
